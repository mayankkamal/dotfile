#!/bin/bash

usage()
{
	echo "Usage: "
	echo "   genpass \$1 \$2 \$3 \$4 \$5"
	echo 
	echo "      \$1 - site name such as hotmail.com"
	echo "      \$2 - user name (optional)"
	echo "      \$3 - Output length (optional)"
	echo "      \$4 - custom salt file path (optional)"
	echo "      \$5 - hash algorithm iteration count (optional)"
}

read_config()
{
	CFG_FILE="$1"
	if [ -s $CFG_FILE ] && [ -r $CFG_FILE ]
	then
		CFG_CONTENT=$(cat $CFG_FILE | sed -r '/[^=]+=[^=]+/!d' | sed -r 's/\s+=\s/=/g')
	else
		echo "Check the config file - $CFG_FILE"
		exit 1
	fi
	eval "$CFG_CONTENT"
}

process_args()
{
	if ! [ -z "$1" ]
	then
		site="$1"
	else
		read -sp 'Site: ' site
		echo
	fi
	if ! [ -z "$2" ]
	then
		user="$2"
	fi
	if ! [ -z "$3" ]
	then
		length="$3"
	fi
	if ! [ -z "$4" ]
	then
		random_data_file="$4"
	fi
	if ! [ -z "$5" ]
	then
		iter_count="$5"
	fi
}


gen_rnd_str() {
	data="$secret_msg + $user_prefix$user$user_suffix"
	data="$data@$site_prefix$site$site_suffix + $random_data"
	i=0
	while [ $i -le $iter_count ]; do
		data=$(echo "$data$random_data"|base64|sha256sum|xargs -0)
		i=$(($i+1))
	done
	data=$(echo $data|base64|head -c ${length}|xargs -0)
	random_output_for_site=$(echo "$data$required_msg"|xargs -0)
	echo "$random_output_for_site"|xsel -i -p
	echo "The output is available for $wait_sec sec."
	sleep $wait_sec
	xsel -c -p
	echo "Bye."
}

main()
{
	CFG_FILE=~/.config/gpw/gpw.conf.secret
	read_config $CFG_FILE
	process_args "$1" "$2" "$3" "$4" "$5"
	read -sp 'Secret Sause (Message): ' secret_msg
	echo
	if [ -s $random_data_file ] && [ -r $random_data_file ]
	then
		random_data=$(cat $random_data_file)
	else
		echo "Check the salt file - $random_data_file"
		exit 1
	fi
	gen_rnd_str
	exit 0
}

if [ "$1" = "help" ] || [ "$1" = "?" ]
then
	usage
	exit 0
else
	main "$1" "$2" "$3" "$4" "$5"
fi
